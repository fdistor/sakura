 const { Worker } = require('worker_threads');
 const workerPath = __dirname + '/workers/fico.js';
 const Pool = require('./Pool.js');
 const Data = require('../data/Data.js');

 const searchFiCo = () => {
   return new Promise(async (parentResolve, parentReject) => {
     const start = Date.now();
     const pool = new Pool(10, workerPath, null);
     const stream = new Data().stream();

//     // const iterator = generator => {
//     //   for (const item of generator) {
//     //     const words = item.split(' ');
//     //     // const load = Math.ceil(words.length / workerCount);

//     //     // pool.doWork(words);
//     //   }
//     // };

//     // iterator(stream);

     const run = () => {
       const w = new Worker(workerPath, { workerData: 'start' });
       w.on('message', result => {
         if (result === 'FiCo') console.log('This is FiCo');
       });
       w.on('error', () => console.log('error'));
       w.on('exit', code => {
         if (code !== 0) stopWorker(worker.threadId);
       });

       w.postMessage('hello');
       w.postMessage('exit');
     };

     run();
   });
 };

 searchFiCo();



////////

const { parentPort, isMainThread, workerData } = require('worker_threads');

const compare = string => {
  return string === 'FiCo';
};

parentPort.on('message', data => {
  console.log(data, 'here');
  parentPort.postMessage(data);
});

parentPort.postMessage({ workerData, isMainThread });
